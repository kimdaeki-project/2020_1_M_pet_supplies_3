<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pet.p1.review.ReviewDAO">

	<resultMap type="ReviewVO" id="selectResult3">
		<id column="num" property="num" />
		<result column="title" property="title" />
		<result column="id" property="id" />
		<result column="contents" property="contents" />
		<result column="regDate" property="regDate" />
		<result column="hit" property="hit" />
		<result column="ref" property="ref" />
		<result column="step" property="step" />
		<result column="depth" property="depth" />
		<result column="productNum" property="productNum" />
		<collection property="boardFileVOs" javaType="List"
			ofType="BoardFileVO">
			<id column="fileNum" property="fileNum" />
			<result column="fileName" property="fileName" />
			<result column="oriName" property="oriName" />
			<result column="board" property="board" />

		</collection>

	</resultMap>

	<!-- <sql id="search"> where <choose> <when test="kind == 'bt'"> title </when> 
		<when test="kind=='bw'"> id </when> <otherwise> contents </otherwise> </choose> 
		like '%'||#{search}||'%' </sql> -->

	<select id="boardCount" parameterType="Pager" resultType="Long">
		select count(num) from review
		<!-- <include refid="search"></include> -->
	</select>

	<select id="boardList" parameterType="Pager"
		resultType="ReviewVO">
		select * from
		(select RE.*, rownum R from
		(select * from review
		<!-- <include refid="search"></include> -->
		order by ref desc, step asc) RE)
		where R between #{startRow} and
		#{lastRow}

	</select>

	<select id="pboardList" parameterType="Long"
		resultMap="selectResult3">
		select RE.*,F.* from review RE left join boardFile F
		on(RE.num = F.num)
		where RE.productnum=#{productnum} order by RE.num
		desc
	</select>

	<select id="boardSelect" parameterType="Long"
		resultMap="selectResult3">
		select RE.*,F.*
		from review RE left join boardFile F
		on(RE.num =
		F.num)
		where RE.num=#{num}
	</select>

	<!-- <select id="pboardSelect" parameterType="Long" resultMap="selectResult3"> 
		select RE.*,F.* from review RE left join boardFile F on(RE.num =F.num) left 
		join product p on(RE.productnum = p.productnum) where p.productnum = #{productnum}; 
		</select> -->

	<select id="boardNum" resultType="Long">
		select review_seq.nextval from
		dual
	</select>

	<insert id="boardWrite" parameterType="ReviewVO">
		<selectKey keyProperty="num" order="BEFORE"
			resultType="Long">
			select review_seq.nextval from dual
		</selectKey>

		insert into review values(
		#{num},
		#{title},
		#{id},
		#{contents},
		sysdate,
		0,
		#{num},
		0,
		0,
		100
		)
	</insert>

	<delete id="boardDelete" parameterType="Long">
		delete review where
		num=#{num}
	</delete>

	<update id="boardUpdate" parameterType="ReviewVO">
		update review set
		title=#{title}, contents=#{contents} where num = #{num}
	</update>

	<update id="hitUpdate" parameterType="Long">
		update review set hit =
		hit+1
		where num = #{num}
	</update>

	<update id="boardReplyUpdate" parameterType="ReviewVO">
		update review set
		step=step+1 where
		ref = (select ref from review where num=#{num})
		and
		step >
		(select step from review where num=#{num})
	</update>

	<insert id="boardReply" parameterType="ReviewVO">
		insert into review
		values(review_seq.nextval, #{title}, #{id}, #{contents}, sysdate, 0,
		(select ref from review where num=#{num}),
		(select step from review
		where
		num=#{num})+1,
		(select depth from review where num=#{num})+1
		)

	</insert>

	<select id="minNum" resultType="Long">
		select nvl(min(num),#{num}) from
		review where
		num > #{num}
	</select>

	<select id="maxNum" resultType="Long">
		select nvl(max(num),#{num}) from
		review where
		num &lt; #{num}
	</select>


</mapper>  
	